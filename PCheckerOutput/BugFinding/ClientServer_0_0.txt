<TestLog> Running test 'DefaultImpl'.
<CreateLog> PImplementation.DeadlockDetection was created.
<MonitorLog> PImplementation.DeadlockDetection enters state 'Monitoring'.
<CreateLog> Main(1) was created by task '2'.
<StateLog> Main(1) enters state 'Init'.
<CreateLog> Fork(2) was created by Main(1).
<StateLog> Fork(2) enters state 'Init'.
<PrintLog> Fork 0 initialized
<GotoLog> Fork(2) is transitioning from state 'Init' to state 'PImplementation.Fork.available'.
<StateLog> Fork(2) exits state 'Init'.
<StateLog> Fork(2) enters state 'available'.
<CreateLog> Fork(3) was created by Main(1).
<StateLog> Fork(3) enters state 'Init'.
<PrintLog> Fork 1 initialized
<GotoLog> Fork(3) is transitioning from state 'Init' to state 'PImplementation.Fork.available'.
<StateLog> Fork(3) exits state 'Init'.
<StateLog> Fork(3) enters state 'available'.
<CreateLog> Fork(4) was created by Main(1).
<CreateLog> Fork(5) was created by Main(1).
<StateLog> Fork(4) enters state 'Init'.
<PrintLog> Fork 2 initialized
<GotoLog> Fork(4) is transitioning from state 'Init' to state 'PImplementation.Fork.available'.
<StateLog> Fork(4) exits state 'Init'.
<StateLog> Fork(4) enters state 'available'.
<StateLog> Fork(5) enters state 'Init'.
<PrintLog> Fork 3 initialized
<GotoLog> Fork(5) is transitioning from state 'Init' to state 'PImplementation.Fork.available'.
<StateLog> Fork(5) exits state 'Init'.
<StateLog> Fork(5) enters state 'available'.
<CreateLog> Fork(6) was created by Main(1).
<StateLog> Fork(6) enters state 'Init'.
<PrintLog> Fork 4 initialized
<GotoLog> Fork(6) is transitioning from state 'Init' to state 'PImplementation.Fork.available'.
<StateLog> Fork(6) exits state 'Init'.
<StateLog> Fork(6) enters state 'available'.
<CreateLog> Philo(7) was created by Main(1).
<StateLog> Philo(7) enters state 'Init'.
<PrintLog> Philosopher 0: left 0 and right 1
<GotoLog> Philo(7) is transitioning from state 'Init' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(7) exits state 'Init'.
<StateLog> Philo(7) enters state 'thinking'.
<GotoLog> Philo(7) is transitioning from state 'thinking' to state 'PImplementation.Philo.philoReady'.
<StateLog> Philo(7) exits state 'thinking'.
<StateLog> Philo(7) enters state 'philoReady'.
<PrintLog> Philosopher 0 is READY
<MonitorLog> DeadlockDetection is processing event 'ePhiloReady' in state 'Monitoring'.
<CreateLog> Philo(8) was created by Main(1).
<SendLog> 'Philo(7)' in state 'philoReady' sent event 'ePhiloReady' to 'Philo(7)'.
<StateLog> Philo(8) enters state 'Init'.
<PrintLog> Philosopher 1: left 1 and right 2
<GotoLog> Philo(8) is transitioning from state 'Init' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(8) exits state 'Init'.
<StateLog> Philo(8) enters state 'thinking'.
<GotoLog> Philo(8) is transitioning from state 'thinking' to state 'PImplementation.Philo.philoReady'.
<StateLog> Philo(8) exits state 'thinking'.
<StateLog> Philo(8) enters state 'philoReady'.
<PrintLog> Philosopher 1 is READY
<MonitorLog> DeadlockDetection is processing event 'ePhiloReady' in state 'Monitoring'.
<SendLog> 'Philo(8)' in state 'philoReady' sent event 'ePhiloReady' to 'Philo(8)'.
<CreateLog> Philo(9) was created by Main(1).
<DequeueLog> 'Philo(7)' dequeued event 'ePhiloReady' in state 'philoReady'.
<GotoLog> Philo(7) is transitioning from state 'philoReady' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(7) exits state 'philoReady'.
<StateLog> Philo(7) enters state 'thinking'.
<StateLog> Philo(9) enters state 'Init'.
<PrintLog> Philosopher 2: left 2 and right 3
<GotoLog> Philo(9) is transitioning from state 'Init' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(9) exits state 'Init'.
<StateLog> Philo(9) enters state 'thinking'.
<GotoLog> Philo(9) is transitioning from state 'thinking' to state 'PImplementation.Philo.philoReady'.
<StateLog> Philo(9) exits state 'thinking'.
<StateLog> Philo(9) enters state 'philoReady'.
<PrintLog> Philosopher 2 is READY
<MonitorLog> DeadlockDetection is processing event 'ePhiloReady' in state 'Monitoring'.
<CreateLog> Philo(10) was created by Main(1).
<SendLog> 'Philo(9)' in state 'philoReady' sent event 'ePhiloReady' to 'Philo(9)'.
<CreateLog> Philo(11) was created by Main(1).
<PrintLog> Started
<DequeueLog> 'Philo(9)' dequeued event 'ePhiloReady' in state 'philoReady'.
<GotoLog> Philo(9) is transitioning from state 'philoReady' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(9) exits state 'philoReady'.
<StateLog> Philo(9) enters state 'thinking'.
<StateLog> Philo(11) enters state 'Init'.
<PrintLog> Philosopher 4: left 4 and right 0
<GotoLog> Philo(11) is transitioning from state 'Init' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(11) exits state 'Init'.
<StateLog> Philo(11) enters state 'thinking'.
<GotoLog> Philo(11) is transitioning from state 'thinking' to state 'PImplementation.Philo.philoReady'.
<StateLog> Philo(11) exits state 'thinking'.
<StateLog> Philo(11) enters state 'philoReady'.
<PrintLog> Philosopher 4 is READY
<MonitorLog> DeadlockDetection is processing event 'ePhiloReady' in state 'Monitoring'.
<SendLog> 'Philo(9)' in state 'thinking' sent event 'eAcquireFork with payload (<philo:<id:2, left:<id:2, m:Fork(4), >, right:<id:3, m:Fork(5), >, isException:False, m:Philo(9), >, fork:<id:2, m:Fork(4), >, >)' to 'Fork(4)'.
<SendLog> 'Philo(11)' in state 'philoReady' sent event 'ePhiloReady' to 'Philo(11)'.
<DequeueLog> 'Philo(11)' dequeued event 'ePhiloReady' in state 'philoReady'.
<GotoLog> Philo(11) is transitioning from state 'philoReady' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(11) exits state 'philoReady'.
<StateLog> Philo(11) enters state 'thinking'.
<SendLog> 'Philo(11)' in state 'thinking' sent event 'eAcquireFork with payload (<philo:<id:4, left:<id:4, m:Fork(6), >, right:<id:0, m:Fork(2), >, isException:False, m:Philo(11), >, fork:<id:4, m:Fork(6), >, >)' to 'Fork(6)'.
<DequeueLog> 'Fork(4)' dequeued event 'eAcquireFork with payload (<philo:<id:2, left:<id:2, m:Fork(4), >, right:<id:3, m:Fork(5), >, isException:False, m:Philo(9), >, fork:<id:2, m:Fork(4), >, >)' in state 'available'.
<PrintLog> Philosopher 2 GOT fork 2
<MonitorLog> DeadlockDetection is processing event 'eForkAcquired' in state 'Monitoring'.
<PrintLog> Total fork acquisitions: 1
<StateLog> Philo(10) enters state 'Init'.
<PrintLog> Philosopher 3: left 3 and right 4
<GotoLog> Philo(10) is transitioning from state 'Init' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(10) exits state 'Init'.
<StateLog> Philo(10) enters state 'thinking'.
<GotoLog> Philo(10) is transitioning from state 'thinking' to state 'PImplementation.Philo.philoReady'.
<StateLog> Philo(10) exits state 'thinking'.
<StateLog> Philo(10) enters state 'philoReady'.
<PrintLog> Philosopher 3 is READY
<MonitorLog> DeadlockDetection is processing event 'ePhiloReady' in state 'Monitoring'.
<DequeueLog> 'Philo(8)' dequeued event 'ePhiloReady' in state 'philoReady'.
<GotoLog> Philo(8) is transitioning from state 'philoReady' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(8) exits state 'philoReady'.
<StateLog> Philo(8) enters state 'thinking'.
<SendLog> 'Fork(4)' in state 'available' sent event 'eForkAcquired' to 'Philo(9)'.
<GotoLog> Fork(4) is transitioning from state 'available' to state 'PImplementation.Fork.taken'.
<StateLog> Fork(4) exits state 'available'.
<StateLog> Fork(4) enters state 'taken'.
<SendLog> 'Philo(8)' in state 'thinking' sent event 'eAcquireFork with payload (<philo:<id:1, left:<id:1, m:Fork(3), >, right:<id:2, m:Fork(4), >, isException:False, m:Philo(8), >, fork:<id:1, m:Fork(3), >, >)' to 'Fork(3)'.
<SendLog> 'Philo(7)' in state 'thinking' sent event 'eAcquireFork with payload (<philo:<id:0, left:<id:0, m:Fork(2), >, right:<id:1, m:Fork(3), >, isException:False, m:Philo(7), >, fork:<id:0, m:Fork(2), >, >)' to 'Fork(2)'.
<DequeueLog> 'Fork(3)' dequeued event 'eAcquireFork with payload (<philo:<id:1, left:<id:1, m:Fork(3), >, right:<id:2, m:Fork(4), >, isException:False, m:Philo(8), >, fork:<id:1, m:Fork(3), >, >)' in state 'available'.
<PrintLog> Philosopher 1 GOT fork 1
<MonitorLog> DeadlockDetection is processing event 'eForkAcquired' in state 'Monitoring'.
<PrintLog> Total fork acquisitions: 2
<SendLog> 'Philo(10)' in state 'philoReady' sent event 'ePhiloReady' to 'Philo(10)'.
<DequeueLog> 'Philo(9)' dequeued event 'eForkAcquired' in state 'thinking'.
<SendLog> 'Fork(3)' in state 'available' sent event 'eForkAcquired' to 'Philo(8)'.
<GotoLog> Fork(3) is transitioning from state 'available' to state 'PImplementation.Fork.taken'.
<StateLog> Fork(3) exits state 'available'.
<StateLog> Fork(3) enters state 'taken'.
<DequeueLog> 'Fork(6)' dequeued event 'eAcquireFork with payload (<philo:<id:4, left:<id:4, m:Fork(6), >, right:<id:0, m:Fork(2), >, isException:False, m:Philo(11), >, fork:<id:4, m:Fork(6), >, >)' in state 'available'.
<PrintLog> Philosopher 4 GOT fork 4
<MonitorLog> DeadlockDetection is processing event 'eForkAcquired' in state 'Monitoring'.
<PrintLog> Total fork acquisitions: 3
<DequeueLog> 'Philo(8)' dequeued event 'eForkAcquired' in state 'thinking'.
<DequeueLog> 'Philo(10)' dequeued event 'ePhiloReady' in state 'philoReady'.
<GotoLog> Philo(10) is transitioning from state 'philoReady' to state 'PImplementation.Philo.thinking'.
<StateLog> Philo(10) exits state 'philoReady'.
<StateLog> Philo(10) enters state 'thinking'.
<SendLog> 'Fork(6)' in state 'available' sent event 'eForkAcquired' to 'Philo(11)'.
<GotoLog> Fork(6) is transitioning from state 'available' to state 'PImplementation.Fork.taken'.
<StateLog> Fork(6) exits state 'available'.
<StateLog> Fork(6) enters state 'taken'.
<SendLog> 'Philo(9)' in state 'thinking' sent event 'eAcquireFork with payload (<philo:<id:2, left:<id:2, m:Fork(4), >, right:<id:3, m:Fork(5), >, isException:False, m:Philo(9), >, fork:<id:3, m:Fork(5), >, >)' to 'Fork(5)'.
<DequeueLog> 'Fork(5)' dequeued event 'eAcquireFork with payload (<philo:<id:2, left:<id:2, m:Fork(4), >, right:<id:3, m:Fork(5), >, isException:False, m:Philo(9), >, fork:<id:3, m:Fork(5), >, >)' in state 'available'.
<PrintLog> Philosopher 2 GOT fork 3
<MonitorLog> DeadlockDetection is processing event 'eForkAcquired' in state 'Monitoring'.
<PrintLog> Total fork acquisitions: 4
<DequeueLog> 'Fork(2)' dequeued event 'eAcquireFork with payload (<philo:<id:0, left:<id:0, m:Fork(2), >, right:<id:1, m:Fork(3), >, isException:False, m:Philo(7), >, fork:<id:0, m:Fork(2), >, >)' in state 'available'.
<PrintLog> Philosopher 0 GOT fork 0
<MonitorLog> DeadlockDetection is processing event 'eForkAcquired' in state 'Monitoring'.
<PrintLog> Total fork acquisitions: 5
<ErrorLog> Assertion Failed: PSpec\Lock.p:30:18 Too many fork acquisitions, potential deadlock
<StrategyLog> Found bug using 'random' strategy.
<StrategyLog> Checking statistics:
<StrategyLog> Found 1 bug.
<StrategyLog> Scheduling statistics:
<StrategyLog> Explored 1 schedule
<StrategyLog> Explored 1 timeline
<StrategyLog> Found 100.00% buggy schedules.
<StrategyLog> Number of scheduling points in terminating schedules: 47 (min), 47 (avg), 47 (max).