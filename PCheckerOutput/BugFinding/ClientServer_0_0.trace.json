[
  {
    "type": "CreateMonitor",
    "details": {
      "log": "DeadlockDetection was created.",
      "payload": "null",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 1
      }
    }
  },
  {
    "type": "MonitorStateTransition",
    "details": {
      "log": "DeadlockDetection enters state \u0027Monitoring\u0027.",
      "state": "Monitoring",
      "payload": "null",
      "isEntry": true,
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Main(1) was created by task \u00272\u0027.",
      "id": "Main(1)",
      "payload": "null",
      "clock": {
        "Main(1)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Main(1) enters state \u0027Init\u0027.",
      "id": "Main(1)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Main(1)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(2) was created by Main(1).",
      "id": "Fork(2)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Fork(2)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(2) enters state \u0027Init\u0027.",
      "id": "Fork(2)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(2)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Fork 0 initialized",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(2) is transitioning from state \u0027Init\u0027 to state \u0027available\u0027.",
      "id": "Fork(2)",
      "startState": "Init",
      "endState": "available",
      "payload": "null",
      "clock": {
        "Fork(2)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(2) exits state \u0027Init\u0027.",
      "id": "Fork(2)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(2)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(2) enters state \u0027available\u0027.",
      "id": "Fork(2)",
      "state": "available",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(2)": 5
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(3) was created by Main(1).",
      "id": "Fork(3)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Fork(3)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) enters state \u0027Init\u0027.",
      "id": "Fork(3)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(3)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Fork 1 initialized",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(3) is transitioning from state \u0027Init\u0027 to state \u0027available\u0027.",
      "id": "Fork(3)",
      "startState": "Init",
      "endState": "available",
      "payload": "null",
      "clock": {
        "Fork(3)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) exits state \u0027Init\u0027.",
      "id": "Fork(3)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(3)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) enters state \u0027available\u0027.",
      "id": "Fork(3)",
      "state": "available",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(3)": 5
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(4) was created by Main(1).",
      "id": "Fork(4)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Fork(4)": 1
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(5) was created by Main(1).",
      "id": "Fork(5)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Fork(5)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) enters state \u0027Init\u0027.",
      "id": "Fork(4)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(4)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Fork 2 initialized",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(4) is transitioning from state \u0027Init\u0027 to state \u0027available\u0027.",
      "id": "Fork(4)",
      "startState": "Init",
      "endState": "available",
      "payload": "null",
      "clock": {
        "Fork(4)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) exits state \u0027Init\u0027.",
      "id": "Fork(4)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(4)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) enters state \u0027available\u0027.",
      "id": "Fork(4)",
      "state": "available",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(4)": 5
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(5) enters state \u0027Init\u0027.",
      "id": "Fork(5)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(5)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Fork 3 initialized",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(5) is transitioning from state \u0027Init\u0027 to state \u0027available\u0027.",
      "id": "Fork(5)",
      "startState": "Init",
      "endState": "available",
      "payload": "null",
      "clock": {
        "Fork(5)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(5) exits state \u0027Init\u0027.",
      "id": "Fork(5)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(5)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(5) enters state \u0027available\u0027.",
      "id": "Fork(5)",
      "state": "available",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(5)": 5
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(6) was created by Main(1).",
      "id": "Fork(6)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Fork(6)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) enters state \u0027Init\u0027.",
      "id": "Fork(6)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(6)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Fork 4 initialized",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(6) is transitioning from state \u0027Init\u0027 to state \u0027available\u0027.",
      "id": "Fork(6)",
      "startState": "Init",
      "endState": "available",
      "payload": "null",
      "clock": {
        "Fork(6)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) exits state \u0027Init\u0027.",
      "id": "Fork(6)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(6)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) enters state \u0027available\u0027.",
      "id": "Fork(6)",
      "state": "available",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(6)": 5
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philo(7) was created by Main(1).",
      "id": "Philo(7)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Philo(7)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) enters state \u0027Init\u0027.",
      "id": "Philo(7)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(7)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 0: left 0 and right 1",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(7) is transitioning from state \u0027Init\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(7)",
      "startState": "Init",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(7)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) exits state \u0027Init\u0027.",
      "id": "Philo(7)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(7)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) enters state \u0027thinking\u0027.",
      "id": "Philo(7)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(7)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(7) is transitioning from state \u0027thinking\u0027 to state \u0027philoReady\u0027.",
      "id": "Philo(7)",
      "startState": "thinking",
      "endState": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(7)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) exits state \u0027thinking\u0027.",
      "id": "Philo(7)",
      "state": "thinking",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(7)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) enters state \u0027philoReady\u0027.",
      "id": "Philo(7)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(7)": 8
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 0 is READY",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027ePhiloReady\u0027 in state \u0027Monitoring\u0027.",
      "event": "ePhiloReady",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Philo(7)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 3,
        "Philo(7)": 8
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philo(8) was created by Main(1).",
      "id": "Philo(8)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Philo(8)": 1
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(7)\u0027 in state \u0027philoReady\u0027 sent event \u0027ePhiloReady\u0027 to \u0027Philo(7)\u0027.",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "sender": "Philo(7)",
      "target": "Philo(7)",
      "isTargetHalted": false,
      "clock": {
        "Philo(7)": 9
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) enters state \u0027Init\u0027.",
      "id": "Philo(8)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(8)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 1: left 1 and right 2",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(8) is transitioning from state \u0027Init\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "startState": "Init",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(8)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) exits state \u0027Init\u0027.",
      "id": "Philo(8)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(8)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) enters state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(8)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(8) is transitioning from state \u0027thinking\u0027 to state \u0027philoReady\u0027.",
      "id": "Philo(8)",
      "startState": "thinking",
      "endState": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(8)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) exits state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "state": "thinking",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(8)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) enters state \u0027philoReady\u0027.",
      "id": "Philo(8)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(8)": 8
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 1 is READY",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027ePhiloReady\u0027 in state \u0027Monitoring\u0027.",
      "event": "ePhiloReady",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Philo(8)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 4,
        "Philo(7)": 8,
        "Philo(8)": 8
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(8)\u0027 in state \u0027philoReady\u0027 sent event \u0027ePhiloReady\u0027 to \u0027Philo(8)\u0027.",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "sender": "Philo(8)",
      "target": "Philo(8)",
      "isTargetHalted": false,
      "clock": {
        "Philo(8)": 9
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philo(9) was created by Main(1).",
      "id": "Philo(9)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Philo(9)": 1
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(7)\u0027 dequeued event \u0027ePhiloReady\u0027 in state \u0027philoReady\u0027.",
      "id": "Philo(7)",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(7)": 10
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(7) is transitioning from state \u0027philoReady\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(7)",
      "startState": "philoReady",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(7)": 11
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) exits state \u0027philoReady\u0027.",
      "id": "Philo(7)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(7)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(7) enters state \u0027thinking\u0027.",
      "id": "Philo(7)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(7)": 13
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) enters state \u0027Init\u0027.",
      "id": "Philo(9)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(9)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 2: left 2 and right 3",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(9) is transitioning from state \u0027Init\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "startState": "Init",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(9)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) exits state \u0027Init\u0027.",
      "id": "Philo(9)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(9)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) enters state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(9)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(9) is transitioning from state \u0027thinking\u0027 to state \u0027philoReady\u0027.",
      "id": "Philo(9)",
      "startState": "thinking",
      "endState": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(9)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) exits state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "state": "thinking",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(9)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) enters state \u0027philoReady\u0027.",
      "id": "Philo(9)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(9)": 8
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 2 is READY",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027ePhiloReady\u0027 in state \u0027Monitoring\u0027.",
      "event": "ePhiloReady",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Philo(9)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 5,
        "Philo(7)": 8,
        "Philo(8)": 8,
        "Philo(9)": 8
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philo(10) was created by Main(1).",
      "id": "Philo(10)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Philo(10)": 1
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(9)\u0027 in state \u0027philoReady\u0027 sent event \u0027ePhiloReady\u0027 to \u0027Philo(9)\u0027.",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "sender": "Philo(9)",
      "target": "Philo(9)",
      "isTargetHalted": false,
      "clock": {
        "Philo(9)": 9
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philo(11) was created by Main(1).",
      "id": "Philo(11)",
      "creatorName": "Main(1)",
      "creatorType": "Main",
      "payload": "null",
      "clock": {
        "Philo(11)": 1
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Started",
      "payload": "null"
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(9)\u0027 dequeued event \u0027ePhiloReady\u0027 in state \u0027philoReady\u0027.",
      "id": "Philo(9)",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(9)": 10
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(9) is transitioning from state \u0027philoReady\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "startState": "philoReady",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(9)": 11
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) exits state \u0027philoReady\u0027.",
      "id": "Philo(9)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(9)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(9) enters state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(9)": 13
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) enters state \u0027Init\u0027.",
      "id": "Philo(11)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(11)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 4: left 4 and right 0",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(11) is transitioning from state \u0027Init\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(11)",
      "startState": "Init",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(11)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) exits state \u0027Init\u0027.",
      "id": "Philo(11)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(11)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) enters state \u0027thinking\u0027.",
      "id": "Philo(11)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(11)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(11) is transitioning from state \u0027thinking\u0027 to state \u0027philoReady\u0027.",
      "id": "Philo(11)",
      "startState": "thinking",
      "endState": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(11)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) exits state \u0027thinking\u0027.",
      "id": "Philo(11)",
      "state": "thinking",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(11)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) enters state \u0027philoReady\u0027.",
      "id": "Philo(11)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(11)": 8
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 4 is READY",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027ePhiloReady\u0027 in state \u0027Monitoring\u0027.",
      "event": "ePhiloReady",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Philo(11)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 6,
        "Philo(7)": 8,
        "Philo(8)": 8,
        "Philo(9)": 8,
        "Philo(11)": 8
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(9)\u0027 in state \u0027thinking\u0027 sent event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:2, left:\u003Cid:2, m:Fork(4), \u003E, right:\u003Cid:3, m:Fork(5), \u003E, isException:False, m:Philo(9), \u003E, fork:\u003Cid:2, m:Fork(4), \u003E, \u003E)\u0027 to \u0027Fork(4)\u0027.",
      "event": "eAcquireFork",
      "state": "thinking",
      "payload": {
        "philo": {
          "id": 2,
          "left": {
            "id": 2,
            "m": "Fork(4)"
          },
          "right": {
            "id": 3,
            "m": "Fork(5)"
          },
          "isException": false,
          "m": "Philo(9)"
        },
        "fork": {
          "id": 2,
          "m": "Fork(4)"
        }
      },
      "sender": "Philo(9)",
      "target": "Fork(4)",
      "isTargetHalted": false,
      "clock": {
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(11)\u0027 in state \u0027philoReady\u0027 sent event \u0027ePhiloReady\u0027 to \u0027Philo(11)\u0027.",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "sender": "Philo(11)",
      "target": "Philo(11)",
      "isTargetHalted": false,
      "clock": {
        "Philo(11)": 9
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(11)\u0027 dequeued event \u0027ePhiloReady\u0027 in state \u0027philoReady\u0027.",
      "id": "Philo(11)",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(11)": 10
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(11) is transitioning from state \u0027philoReady\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(11)",
      "startState": "philoReady",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(11)": 11
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) exits state \u0027philoReady\u0027.",
      "id": "Philo(11)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(11)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(11) enters state \u0027thinking\u0027.",
      "id": "Philo(11)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(11)": 13
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(11)\u0027 in state \u0027thinking\u0027 sent event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:4, left:\u003Cid:4, m:Fork(6), \u003E, right:\u003Cid:0, m:Fork(2), \u003E, isException:False, m:Philo(11), \u003E, fork:\u003Cid:4, m:Fork(6), \u003E, \u003E)\u0027 to \u0027Fork(6)\u0027.",
      "event": "eAcquireFork",
      "state": "thinking",
      "payload": {
        "philo": {
          "id": 4,
          "left": {
            "id": 4,
            "m": "Fork(6)"
          },
          "right": {
            "id": 0,
            "m": "Fork(2)"
          },
          "isException": false,
          "m": "Philo(11)"
        },
        "fork": {
          "id": 4,
          "m": "Fork(6)"
        }
      },
      "sender": "Philo(11)",
      "target": "Fork(6)",
      "isTargetHalted": false,
      "clock": {
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(4)\u0027 dequeued event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:2, left:\u003Cid:2, m:Fork(4), \u003E, right:\u003Cid:3, m:Fork(5), \u003E, isException:False, m:Philo(9), \u003E, fork:\u003Cid:2, m:Fork(4), \u003E, \u003E)\u0027 in state \u0027available\u0027.",
      "id": "Fork(4)",
      "event": "eAcquireFork",
      "state": "available",
      "payload": {
        "philo": {
          "id": 2,
          "left": {
            "id": 2,
            "m": "Fork(4)"
          },
          "right": {
            "id": 3,
            "m": "Fork(5)"
          },
          "isException": false,
          "m": "Philo(9)"
        },
        "fork": {
          "id": 2,
          "m": "Fork(4)"
        }
      },
      "clock": {
        "Fork(4)": 6,
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 2 GOT fork 2",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027eForkAcquired\u0027 in state \u0027Monitoring\u0027.",
      "event": "eForkAcquired",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Fork(4)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 7,
        "Philo(7)": 8,
        "Philo(8)": 8,
        "Philo(9)": 14,
        "Philo(11)": 8,
        "Fork(4)": 6
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Total fork acquisitions: 1",
      "payload": "null"
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) enters state \u0027Init\u0027.",
      "id": "Philo(10)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(10)": 2
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 3: left 3 and right 4",
      "payload": "null"
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(10) is transitioning from state \u0027Init\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(10)",
      "startState": "Init",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(10)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) exits state \u0027Init\u0027.",
      "id": "Philo(10)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(10)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) enters state \u0027thinking\u0027.",
      "id": "Philo(10)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(10)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(10) is transitioning from state \u0027thinking\u0027 to state \u0027philoReady\u0027.",
      "id": "Philo(10)",
      "startState": "thinking",
      "endState": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(10)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) exits state \u0027thinking\u0027.",
      "id": "Philo(10)",
      "state": "thinking",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(10)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) enters state \u0027philoReady\u0027.",
      "id": "Philo(10)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(10)": 8
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 3 is READY",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027ePhiloReady\u0027 in state \u0027Monitoring\u0027.",
      "event": "ePhiloReady",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Philo(10)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 8,
        "Philo(7)": 8,
        "Philo(8)": 8,
        "Philo(9)": 14,
        "Philo(11)": 8,
        "Fork(4)": 6,
        "Philo(10)": 8
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(8)\u0027 dequeued event \u0027ePhiloReady\u0027 in state \u0027philoReady\u0027.",
      "id": "Philo(8)",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(8)": 10
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(8) is transitioning from state \u0027philoReady\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "startState": "philoReady",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(8)": 11
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) exits state \u0027philoReady\u0027.",
      "id": "Philo(8)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(8)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(8) enters state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(8)": 13
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(4)\u0027 in state \u0027available\u0027 sent event \u0027eForkAcquired\u0027 to \u0027Philo(9)\u0027.",
      "event": "eForkAcquired",
      "state": "available",
      "payload": "null",
      "sender": "Fork(4)",
      "target": "Philo(9)",
      "isTargetHalted": false,
      "clock": {
        "Fork(4)": 7,
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(4) is transitioning from state \u0027available\u0027 to state \u0027taken\u0027.",
      "id": "Fork(4)",
      "startState": "available",
      "endState": "taken",
      "payload": "null",
      "clock": {
        "Fork(4)": 8,
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) exits state \u0027available\u0027.",
      "id": "Fork(4)",
      "state": "available",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(4)": 9,
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) enters state \u0027taken\u0027.",
      "id": "Fork(4)",
      "state": "taken",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(4)": 10,
        "Philo(9)": 14
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(8)\u0027 in state \u0027thinking\u0027 sent event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:1, left:\u003Cid:1, m:Fork(3), \u003E, right:\u003Cid:2, m:Fork(4), \u003E, isException:False, m:Philo(8), \u003E, fork:\u003Cid:1, m:Fork(3), \u003E, \u003E)\u0027 to \u0027Fork(3)\u0027.",
      "event": "eAcquireFork",
      "state": "thinking",
      "payload": {
        "philo": {
          "id": 1,
          "left": {
            "id": 1,
            "m": "Fork(3)"
          },
          "right": {
            "id": 2,
            "m": "Fork(4)"
          },
          "isException": false,
          "m": "Philo(8)"
        },
        "fork": {
          "id": 1,
          "m": "Fork(3)"
        }
      },
      "sender": "Philo(8)",
      "target": "Fork(3)",
      "isTargetHalted": false,
      "clock": {
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(7)\u0027 in state \u0027thinking\u0027 sent event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:0, left:\u003Cid:0, m:Fork(2), \u003E, right:\u003Cid:1, m:Fork(3), \u003E, isException:False, m:Philo(7), \u003E, fork:\u003Cid:0, m:Fork(2), \u003E, \u003E)\u0027 to \u0027Fork(2)\u0027.",
      "event": "eAcquireFork",
      "state": "thinking",
      "payload": {
        "philo": {
          "id": 0,
          "left": {
            "id": 0,
            "m": "Fork(2)"
          },
          "right": {
            "id": 1,
            "m": "Fork(3)"
          },
          "isException": false,
          "m": "Philo(7)"
        },
        "fork": {
          "id": 0,
          "m": "Fork(2)"
        }
      },
      "sender": "Philo(7)",
      "target": "Fork(2)",
      "isTargetHalted": false,
      "clock": {
        "Philo(7)": 14
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(3)\u0027 dequeued event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:1, left:\u003Cid:1, m:Fork(3), \u003E, right:\u003Cid:2, m:Fork(4), \u003E, isException:False, m:Philo(8), \u003E, fork:\u003Cid:1, m:Fork(3), \u003E, \u003E)\u0027 in state \u0027available\u0027.",
      "id": "Fork(3)",
      "event": "eAcquireFork",
      "state": "available",
      "payload": {
        "philo": {
          "id": 1,
          "left": {
            "id": 1,
            "m": "Fork(3)"
          },
          "right": {
            "id": 2,
            "m": "Fork(4)"
          },
          "isException": false,
          "m": "Philo(8)"
        },
        "fork": {
          "id": 1,
          "m": "Fork(3)"
        }
      },
      "clock": {
        "Fork(3)": 6,
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 1 GOT fork 1",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027eForkAcquired\u0027 in state \u0027Monitoring\u0027.",
      "event": "eForkAcquired",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Fork(3)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 9,
        "Philo(7)": 8,
        "Philo(8)": 14,
        "Philo(9)": 14,
        "Philo(11)": 8,
        "Fork(4)": 6,
        "Philo(10)": 8,
        "Fork(3)": 6
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Total fork acquisitions: 2",
      "payload": "null"
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(10)\u0027 in state \u0027philoReady\u0027 sent event \u0027ePhiloReady\u0027 to \u0027Philo(10)\u0027.",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "sender": "Philo(10)",
      "target": "Philo(10)",
      "isTargetHalted": false,
      "clock": {
        "Philo(10)": 9
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(9)\u0027 dequeued event \u0027eForkAcquired\u0027 in state \u0027thinking\u0027.",
      "id": "Philo(9)",
      "event": "eForkAcquired",
      "state": "thinking",
      "payload": "null",
      "clock": {
        "Philo(9)": 15,
        "Fork(4)": 7
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(3)\u0027 in state \u0027available\u0027 sent event \u0027eForkAcquired\u0027 to \u0027Philo(8)\u0027.",
      "event": "eForkAcquired",
      "state": "available",
      "payload": "null",
      "sender": "Fork(3)",
      "target": "Philo(8)",
      "isTargetHalted": false,
      "clock": {
        "Fork(3)": 7,
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(3) is transitioning from state \u0027available\u0027 to state \u0027taken\u0027.",
      "id": "Fork(3)",
      "startState": "available",
      "endState": "taken",
      "payload": "null",
      "clock": {
        "Fork(3)": 8,
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) exits state \u0027available\u0027.",
      "id": "Fork(3)",
      "state": "available",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(3)": 9,
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) enters state \u0027taken\u0027.",
      "id": "Fork(3)",
      "state": "taken",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(3)": 10,
        "Philo(8)": 14
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(6)\u0027 dequeued event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:4, left:\u003Cid:4, m:Fork(6), \u003E, right:\u003Cid:0, m:Fork(2), \u003E, isException:False, m:Philo(11), \u003E, fork:\u003Cid:4, m:Fork(6), \u003E, \u003E)\u0027 in state \u0027available\u0027.",
      "id": "Fork(6)",
      "event": "eAcquireFork",
      "state": "available",
      "payload": {
        "philo": {
          "id": 4,
          "left": {
            "id": 4,
            "m": "Fork(6)"
          },
          "right": {
            "id": 0,
            "m": "Fork(2)"
          },
          "isException": false,
          "m": "Philo(11)"
        },
        "fork": {
          "id": 4,
          "m": "Fork(6)"
        }
      },
      "clock": {
        "Fork(6)": 6,
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 4 GOT fork 4",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027eForkAcquired\u0027 in state \u0027Monitoring\u0027.",
      "event": "eForkAcquired",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Fork(6)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 10,
        "Philo(7)": 8,
        "Philo(8)": 14,
        "Philo(9)": 14,
        "Philo(11)": 14,
        "Fork(4)": 6,
        "Philo(10)": 8,
        "Fork(3)": 6,
        "Fork(6)": 6
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Total fork acquisitions: 3",
      "payload": "null"
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(8)\u0027 dequeued event \u0027eForkAcquired\u0027 in state \u0027thinking\u0027.",
      "id": "Philo(8)",
      "event": "eForkAcquired",
      "state": "thinking",
      "payload": "null",
      "clock": {
        "Philo(8)": 15,
        "Fork(3)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philo(10)\u0027 dequeued event \u0027ePhiloReady\u0027 in state \u0027philoReady\u0027.",
      "id": "Philo(10)",
      "event": "ePhiloReady",
      "state": "philoReady",
      "payload": "null",
      "clock": {
        "Philo(10)": 10
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philo(10) is transitioning from state \u0027philoReady\u0027 to state \u0027thinking\u0027.",
      "id": "Philo(10)",
      "startState": "philoReady",
      "endState": "thinking",
      "payload": "null",
      "clock": {
        "Philo(10)": 11
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) exits state \u0027philoReady\u0027.",
      "id": "Philo(10)",
      "state": "philoReady",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philo(10)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philo(10) enters state \u0027thinking\u0027.",
      "id": "Philo(10)",
      "state": "thinking",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philo(10)": 13
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(6)\u0027 in state \u0027available\u0027 sent event \u0027eForkAcquired\u0027 to \u0027Philo(11)\u0027.",
      "event": "eForkAcquired",
      "state": "available",
      "payload": "null",
      "sender": "Fork(6)",
      "target": "Philo(11)",
      "isTargetHalted": false,
      "clock": {
        "Fork(6)": 7,
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Fork(6) is transitioning from state \u0027available\u0027 to state \u0027taken\u0027.",
      "id": "Fork(6)",
      "startState": "available",
      "endState": "taken",
      "payload": "null",
      "clock": {
        "Fork(6)": 8,
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) exits state \u0027available\u0027.",
      "id": "Fork(6)",
      "state": "available",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Fork(6)": 9,
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) enters state \u0027taken\u0027.",
      "id": "Fork(6)",
      "state": "taken",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(6)": 10,
        "Philo(11)": 14
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philo(9)\u0027 in state \u0027thinking\u0027 sent event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:2, left:\u003Cid:2, m:Fork(4), \u003E, right:\u003Cid:3, m:Fork(5), \u003E, isException:False, m:Philo(9), \u003E, fork:\u003Cid:3, m:Fork(5), \u003E, \u003E)\u0027 to \u0027Fork(5)\u0027.",
      "event": "eAcquireFork",
      "state": "thinking",
      "payload": {
        "philo": {
          "id": 2,
          "left": {
            "id": 2,
            "m": "Fork(4)"
          },
          "right": {
            "id": 3,
            "m": "Fork(5)"
          },
          "isException": false,
          "m": "Philo(9)"
        },
        "fork": {
          "id": 3,
          "m": "Fork(5)"
        }
      },
      "sender": "Philo(9)",
      "target": "Fork(5)",
      "isTargetHalted": false,
      "clock": {
        "Philo(9)": 16,
        "Fork(4)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(5)\u0027 dequeued event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:2, left:\u003Cid:2, m:Fork(4), \u003E, right:\u003Cid:3, m:Fork(5), \u003E, isException:False, m:Philo(9), \u003E, fork:\u003Cid:3, m:Fork(5), \u003E, \u003E)\u0027 in state \u0027available\u0027.",
      "id": "Fork(5)",
      "event": "eAcquireFork",
      "state": "available",
      "payload": {
        "philo": {
          "id": 2,
          "left": {
            "id": 2,
            "m": "Fork(4)"
          },
          "right": {
            "id": 3,
            "m": "Fork(5)"
          },
          "isException": false,
          "m": "Philo(9)"
        },
        "fork": {
          "id": 3,
          "m": "Fork(5)"
        }
      },
      "clock": {
        "Fork(5)": 6,
        "Philo(9)": 16,
        "Fork(4)": 7
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 2 GOT fork 3",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027eForkAcquired\u0027 in state \u0027Monitoring\u0027.",
      "event": "eForkAcquired",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Fork(5)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 11,
        "Philo(7)": 8,
        "Philo(8)": 14,
        "Philo(9)": 16,
        "Philo(11)": 14,
        "Fork(4)": 7,
        "Philo(10)": 8,
        "Fork(3)": 6,
        "Fork(6)": 6,
        "Fork(5)": 6
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Total fork acquisitions: 4",
      "payload": "null"
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(2)\u0027 dequeued event \u0027eAcquireFork with payload (\u003Cphilo:\u003Cid:0, left:\u003Cid:0, m:Fork(2), \u003E, right:\u003Cid:1, m:Fork(3), \u003E, isException:False, m:Philo(7), \u003E, fork:\u003Cid:0, m:Fork(2), \u003E, \u003E)\u0027 in state \u0027available\u0027.",
      "id": "Fork(2)",
      "event": "eAcquireFork",
      "state": "available",
      "payload": {
        "philo": {
          "id": 0,
          "left": {
            "id": 0,
            "m": "Fork(2)"
          },
          "right": {
            "id": 1,
            "m": "Fork(3)"
          },
          "isException": false,
          "m": "Philo(7)"
        },
        "fork": {
          "id": 0,
          "m": "Fork(2)"
        }
      },
      "clock": {
        "Fork(2)": 6,
        "Philo(7)": 14
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Philosopher 0 GOT fork 0",
      "payload": "null"
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "DeadlockDetection is processing event \u0027eForkAcquired\u0027 in state \u0027Monitoring\u0027.",
      "event": "eForkAcquired",
      "state": "Monitoring",
      "payload": "null",
      "sender": "Fork(2)",
      "monitor": "DeadlockDetection",
      "clock": {
        "DeadlockDetection": 12,
        "Philo(7)": 14,
        "Philo(8)": 14,
        "Philo(9)": 16,
        "Philo(11)": 14,
        "Fork(4)": 7,
        "Philo(10)": 8,
        "Fork(3)": 6,
        "Fork(6)": 6,
        "Fork(5)": 6,
        "Fork(2)": 6
      }
    }
  },
  {
    "type": "Print",
    "details": {
      "log": "Total fork acquisitions: 5",
      "payload": "null"
    }
  },
  {
    "type": "AssertionFailure",
    "details": {
      "log": "Assertion Failed: PSpec\\Lock.p:30:18 Too many fork acquisitions, potential deadlock",
      "error": "Assertion Failed: PSpec\\Lock.p:30:18 Too many fork acquisitions, potential deadlock",
      "payload": "null"
    }
  },
  {
    "type": "StrategyDescription",
    "details": {
      "log": "Found bug using \u0027random\u0027 strategy.",
      "payload": "null",
      "strategy": "random",
      "strategyDescription": "random[seed \u0027763843832\u0027]"
    }
  }
]